<mahApps:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:lex="http://wpflocalizeextension.codeplex.com"
                     xmlns:mahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                     xmlns:localExtensions="clr-namespace:SDSK.QuiqCompose.WinDesktop.Windows.MVVM.Extensions"
                     xmlns:localUtilities="clr-namespace:SDSK.QuiqCompose.WinDesktop.Windows.MVVM.Utilities"
                     xmlns:localViewModels="clr-namespace:SDSK.QuiqCompose.WinDesktop.Windows.MVVM.ViewModels"
                     x:Name="composeWindow"
                     x:Class="SDSK.QuiqCompose.WinDesktop.Windows.ComposeWindow"
                     lex:LocalizeDictionary.DesignCulture="en"
                     lex:ResxLocalizationProvider.DefaultAssembly="QuiqCompose-WinDesktop"
                     lex:ResxLocalizationProvider.DefaultDictionary="Strings"
                     Title="{lex:Loc WindowTitle_Compose}"
                     Height="125"
                     Width="400"
                     Opacity="{Binding WindowOpacity}"
                     Topmost="{Binding TopMost, Mode=TwoWay}"
                     Style="{DynamicResource ComposeWindowStyle}"
                     ContentRendered="StartSubWindow"
                     Closing="CloseSubWindow"
                     LocationChanged="MoveSubWindow"
                     SizeChanged="SizeSubWindow">
    <mahApps:MetroWindow.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Styles/ComposeWindowStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </mahApps:MetroWindow.Resources>
    <mahApps:MetroWindow.DataContext>
        <localViewModels:ComposeWindowViewModel />
    </mahApps:MetroWindow.DataContext>
    <mahApps:MetroWindow.LeftWindowCommands>
        <mahApps:WindowCommands>
            <Button Content="{iconPacks:Material Kind=Settings}"
                    Command="{Binding SettingsCommandBinding}"
                    ToolTip="{lex:Loc Global_Settings}" />
        </mahApps:WindowCommands>
    </mahApps:MetroWindow.LeftWindowCommands>
    <mahApps:MetroWindow.RightWindowCommands>
        <mahApps:WindowCommands>
            <ComboBox ItemsSource="{Binding AccountComboBoxItemsSource, Mode=OneWay}"
                      SelectedItem="{Binding AccountComboBoxSelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      SelectedIndex="{Binding AccountComboBoxSelectedIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      Style="{StaticResource ComposeWindowAccountSelectionComboBox}"
                      localExtensions:ToolTipExtensions.ToolTipText="{Binding AccountComboBoxOpenUserWithBrowserToolTipText, Mode=TwoWay}"
                      localExtensions:ComposeWindowAccountComboBoxExtensions.AddAccountButtonCommand="{Binding AccountComboBoxAddAccountButtonCommandBinding}"
                      localExtensions:ComposeWindowAccountComboBoxExtensions.OpenUserAccountWithBrowserCommand="{Binding AccountComboBoxOpenUserWithBrowserCommandBinding}"
                      localExtensions:ComposeWindowAccountComboBoxExtensions.RemoveAccountButtonCommand="{Binding AccountComboBoxRemoveAccountButtonCommandBinding}"
                      localExtensions:ComposeWindowAccountComboBoxExtensions.ProfileImageVisibility="{Binding AccountComboBoxShowProfileImage, Converter={StaticResource BoolToVisibilityConverter}, Mode=TwoWay}" />
            <Button Content="{iconPacks:Material Kind=Information}"
                    Command="{Binding AppInfoCommandBinding}"
                    ToolTip="{lex:Loc ComposeWindow_AppInfo_ToolTip}" />
        </mahApps:WindowCommands>
    </mahApps:MetroWindow.RightWindowCommands>

    <Grid FocusManager.FocusedElement="{Binding ElementName=composeText}">
        <Button x:Name="composeButton"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="0,0,10,10"
                Style="{StaticResource ComposeWindowButtonStyle}"
                Command="{Binding ComposeCommandBinding, IsAsync=True}"
                CommandParameter="{Binding ElementName=composeText, Path=Text}"
                ToolTip="{lex:Loc ComposeWindow_Send_ToolTip}"
                localExtensions:ComposeWindowComposeButtonExtensions.ComposeStatus="{Binding ComposeButtonComposeStatus}"
                IsEnabled="{Binding ComposeButtonEnabled}" />
        <TextBox x:Name="composeText"
                 Margin="10,10,75,10"
                 UndoLimit="50"
                 mahApps:TextBoxHelper.Watermark="{Binding ComposeTextHint}"
                 TextWrapping="Wrap"
                 Text="{Binding ComposeText, UpdateSourceTrigger=PropertyChanged}"
                 ToolTip="{lex:Loc ComposeWindow_TextBox_ShortcutsToolTip}"
                 AcceptsReturn="True"
                 FontSize="{Binding ComposeTextFontSize, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                 IsReadOnly="{Binding ComposeTextReadOnly}"
                 IsEnabled="{Binding ComposeTextEnabled}">
            <TextBox.InputBindings>
                <KeyBinding Modifiers="Ctrl"
                            Key="Return"
                            Command="{Binding ComposeCommandBinding}"
                            CommandParameter="{Binding ElementName=composeText, Path=Text}" />
                <MouseBinding Gesture="{x:Static localUtilities:MouseWheelGesture.ControlUp}"
                              Command="{Binding ComposeTextFontSizeZoomInCommandBinding}" />
                <MouseBinding Gesture="{x:Static localUtilities:MouseWheelGesture.ControlDown}"
                              Command="{Binding ComposeTextFontSizeZoomOutCommandBinding}" />
            </TextBox.InputBindings>
        </TextBox>
        <mahApps:MetroProgressBar x:Name="textLengthProgressBar"
                                  VerticalAlignment="Bottom"
                                  Value="{Binding TextLength}"
                                  Style="{StaticResource ComposeWindowTwitterTextLengthStyle}" />
    </Grid>
</mahApps:MetroWindow>
